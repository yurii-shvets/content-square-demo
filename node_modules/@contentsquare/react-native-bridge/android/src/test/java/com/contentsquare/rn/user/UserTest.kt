package com.contentsquare.rn

import androidx.test.ext.junit.runners.AndroidJUnit4
import com.contentsquare.android.Contentsquare
import com.contentsquare.rn.webview.WebViewInjector
import com.contentsquare.rn.masking.ViewMasker
import com.facebook.react.bridge.ReactApplicationContext
import org.junit.Test
import org.junit.runner.RunWith
import io.mockk.*
import org.junit.After
import org.junit.Before
import org.robolectric.annotation.Config

/* TODO: Add tests to test for other User related methods */

@RunWith(AndroidJUnit4::class)
@Config(manifest = Config.NONE)
class UserTest {
    // mocks
    private val mockReactApplicationContext = mockk<ReactApplicationContext>()
    private val mockWebViewInjector = mockk<WebViewInjector>()
    private val mockViewMasker = mockk<ViewMasker>()

    private lateinit var module: ContentsquareModule

    @Before
    fun setUp() {
        module =
            ContentsquareModule(mockReactApplicationContext, mockWebViewInjector, mockViewMasker)
        mockkStatic(Contentsquare::class)
    }

    @After
    fun tearDown() {
        clearAllMocks()
    }

    @Test
    fun `When calling sendUserIdentifier calls SDK method sendUserIdentifier`() {
        // Arrange
        val slot = slot<String>()
        every { Contentsquare.sendUserIdentifier(capture(slot)) } just runs

        // Act
        module.sendUserIdentifier("any_identifier")

        // Assert
        verify { Contentsquare.sendUserIdentifier(capture(slot)) }
    }
}