"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stopTracking = exports.sendTransactionWithStringCurrency = exports.sendTransaction = exports.sendDynamicVar = exports.send = exports.resumeTracking = void 0;
var _nativeModules = require("./nativeModules");
var _utils = require("./utils");
/**
 * Re-enables the Contentsquare UX tracking SDK.
 */
var resumeTracking = exports.resumeTracking = function resumeTracking() {
  _nativeModules.ContentsquareModule.resumeTracking();
};

/**
 * Stops the Contentsquare UX tracking SDK.
 * Once this is called the SDK will completely stop.
 */
var stopTracking = exports.stopTracking = function stopTracking() {
  _nativeModules.ContentsquareModule.stopTracking();
};

/**
 * Sends a ScreenName for a CustomScreenView Event to Contentsquare tracking
 * services.
 *
 * @param {string} screenName.
 * @param {CustomVar[]} cvars (optional parameter)
 */
var send = exports.send = function send(screenName, cvars) {
  _nativeModules.ContentsquareModule.send(screenName, cvars);
  (0, _utils.initComponents)();
};

/**
 * Sends a transaction event to Contentsquare tracking services.
 *
 * @param {number} value
 * @param {Currency} currency
 * @param {string} id (optional parameter)
 */
var sendTransaction = exports.sendTransaction = function sendTransaction(value, currency) {
  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  _nativeModules.ContentsquareModule.sendTransaction(id, value, currency);
};

/**
 * Sends a transaction event to Contentsquare tracking services.
 *
 * @param {number} value
 * @param {string} currencyString
 * @param {string} id (optional parameter)
 */
var sendTransactionWithStringCurrency = exports.sendTransactionWithStringCurrency = function sendTransactionWithStringCurrency(value, currency) {
  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  _nativeModules.ContentsquareModule.sendTransactionWithStringCurrency(id, value, currency);
};

/**
 * Sends a (key, value) pair, called DynamicVar, to Contentsquare tracking services.
 *
 * @param {string} key
 * @param {string | number} value
 * @param {(error) => void} onError
 */
var sendDynamicVar = exports.sendDynamicVar = function sendDynamicVar(key, value, onError) {
  if (typeof value === 'string') {
    _nativeModules.ContentsquareModule.sendDynamicStringVar(key, value);
  } else if (Number.isInteger(value) && value >= 0) {
    _nativeModules.ContentsquareModule.sendDynamicIntVar(key, value);
  } else {
    var callbackError = TypeError('The value of the DynamicVar should be either a string or an unsigned integer');
    if (typeof onError === 'function') {
      onError(callbackError);
    } else {
      console.log(callbackError.message);
    }
  }
};