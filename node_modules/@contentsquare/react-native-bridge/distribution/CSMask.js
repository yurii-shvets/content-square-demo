"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CSMask = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var ContentsquareModule = _reactNative.NativeModules.ContentsquareModule;
var CSMask = exports.CSMask = function CSMask(_ref) {
  var _ref$isMasking = _ref.isMasking,
    isMasking = _ref$isMasking === void 0 ? true : _ref$isMasking,
    children = _ref.children;
  var _useState = (0, _react.useState)([]),
    _useState2 = _slicedToArray(_useState, 2),
    refs = _useState2[0],
    setRefs = _useState2[1];
  // for some reason, sometimes (e.g. FlatList) don't have a _nativeTag not until it's wrapped by a View
  var containerRef = (0, _react.useRef)(null);
  (0, _react.useLayoutEffect)(function () {
    setRefs(_react["default"].Children.map(children, function () {
      return /*#__PURE__*/_react["default"].createRef();
    }));
  }, [children]);
  var hasChildComponent = function hasChildComponent(component) {
    var _component$_children;
    return component._children && component._children.length > 0 && (component._children._nativeTag !== undefined || (component === null || component === void 0 || (_component$_children = component._children) === null || _component$_children === void 0 ? void 0 : _component$_children.find(function (child) {
      return child === null || child === void 0 ? void 0 : child._nativeTag;
    })));
  };
  var applyMaskingOnLeaves = function applyMaskingOnLeaves(wrapper, container) {
    if (wrapper && wrapper._children) {
      wrapper._children.forEach(function (child) {
        if (hasChildComponent(child)) {
          applyMaskingOnLeaves(child);
        } else {
          var tag = child._nativeTag;
          if (isMasking) {
            ContentsquareModule.maskView(tag || wrapper._nativeTag);
          } else {
            ContentsquareModule.unmaskView(tag || wrapper._nativeTag);
          }
        }
      });
    } else if (container.current) {
      applyMaskingOnLeaves(container.current);
    }
  };
  var applyMaskingOnView = function applyMaskingOnView(wrapper) {
    if (wrapper && wrapper._nativeTag) {
      var tag = wrapper._nativeTag;
      if (isMasking) {
        ContentsquareModule.maskView(tag);
      } else if (isMasking === false) {
        ContentsquareModule.unmaskView(tag);
      }
    }
  };
  (0, _react.useEffect)(function () {
    if (refs && refs.length > 0) {
      refs.forEach(function (ref) {
        var wrapper = ref.current;
        if (wrapper) {
          if (_reactNative.Platform.OS === 'ios') {
            applyMaskingOnView(wrapper);
          } else if (_reactNative.Platform.OS === 'android') {
            applyMaskingOnLeaves(wrapper, containerRef);
          }
        }
      });
    }
  }, [isMasking, refs, containerRef]);
  return /*#__PURE__*/_react["default"].createElement(_reactNative.View, {
    ref: containerRef
  }, _react["default"].Children.map(children, function (child, index) {
    return /*#__PURE__*/_react["default"].cloneElement(child, {
      ref: refs[index]
    });
  }));
};