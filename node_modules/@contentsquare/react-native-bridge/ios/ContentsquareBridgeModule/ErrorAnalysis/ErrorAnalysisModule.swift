import ContentsquareModule

protocol _ErrorAnalysisModule {
    func setURLMaskingPatterns(_ patterns: [String])
}

@objc(ErrorAnalysisModule)
class ErrorAnalysisModule: NSObject, _ErrorAnalysisModule {
    @objc
    var bridge: RCTBridge!
    
    private let errorAnalysisType: _ErrorAnalysis.Type
    
    @objc
    convenience override init() {
        self.init(ErrorAnalysis.self)
    }
    
    init(_ eaType: _ErrorAnalysis.Type) {
        self.errorAnalysisType = eaType
    }
    
    @objc
    func methodQueue() -> DispatchQueue {
        return bridge.uiManager.methodQueue
    }
    
    @objc
    static func requiresMainQueueSetup() -> Bool {
        return false
    }
    
    @objc
    func setURLMaskingPatterns(_ patterns: [String]) -> Void {
        errorAnalysisType.setURLMaskingPatterns(patterns)
    }
}
